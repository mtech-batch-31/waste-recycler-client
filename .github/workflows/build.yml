name: Build and Deploy

on:
  push:
    branches:
      - main
  pull_request:

env:
  AWS_REGION: ap-southeast-1
  ECR_REPO_NAME: ${{ secrets.ECR_REPOSITORY_URL }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  IMAGE_NAME: ${{ secrets.ECR_REPOSITORY_URL }}:${{ github.sha }}

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Check and build
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      - run: npm ci
      - run: npm test

      - name: Build
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      - run: npm run build
        env:
          REACT_APP_RECYCLE_API_URL: ${{ secrets.REACT_APP_RECYCLE_API_URL }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: my-artifact
          path: build

  build_and_push_image:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME_LATEST: ${{ secrets.ECR_REPOSITORY_URL }}:latest
    needs: build_and_test
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: my-artifact
          path: build

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}
            ${{ env.IMAGE_NAME_LATEST }}

  deploy_to_ecs:
    runs-on: ubuntu-latest
    needs: build_and_push_image
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Update ECS task definition
        id: update-task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: aws/task-definition.json
          container-name: client
          image: ${{ env.IMAGE_NAME }}

      - name: Deploy to ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.update-task-def.outputs.task-definition }}
          service: waste-recycler-v4
          cluster: waste-recycler
          force-new-deployment: false
